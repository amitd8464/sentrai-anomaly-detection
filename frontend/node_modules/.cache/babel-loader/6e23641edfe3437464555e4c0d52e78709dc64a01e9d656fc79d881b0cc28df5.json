{"ast":null,"code":"var _jsxFileName = \"/Users/deshpande_amit/Downloads/secu-scope-smooth-fixed/frontend/src/components/LogsTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport APIClient from '../api/api';\nimport './LogsTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LogsTable() {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    (async () => {\n      try {\n        console.log(\"Fetching raw logs…\");\n        const logsRes = await APIClient.get('/logs');\n        console.log(\"raw logs:\", logsRes.data);\n        console.log(\"Detecting anomalies…\");\n        const detectRes = await APIClient.post('/detect-anomalies', logsRes.data);\n        console.log(\"annotated logs:\", detectRes.data);\n        const anomalies = detectRes.data.filter(l => l.anomaly === -1);\n        console.log(\"filtered anomalies:\", anomalies);\n        setLogs(anomalies);\n      } catch (err) {\n        console.error(\"Error loading logs:\", err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading logs\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Anomalous Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), logs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No anomalies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"logs-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys(logs[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: logs.map(log => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"anomaly-row\",\n          children: Object.values(log).map((val, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this))\n        }, log.id || log.timestamp, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(LogsTable, \"lYx/TOoNu7KeE6EXJa8Z4htpyYA=\");\n_c = LogsTable;\nvar _c;\n$RefreshReg$(_c, \"LogsTable\");","map":{"version":3,"names":["React","useEffect","useState","APIClient","jsxDEV","_jsxDEV","LogsTable","_s","logs","setLogs","loading","setLoading","console","log","logsRes","get","data","detectRes","post","anomalies","filter","l","anomaly","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","Object","keys","map","key","values","val","i","id","timestamp","_c","$RefreshReg$"],"sources":["/Users/deshpande_amit/Downloads/secu-scope-smooth-fixed/frontend/src/components/LogsTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport APIClient from '../api/api';\nimport './LogsTable.css';\n\nexport default function LogsTable() {\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        console.log(\"Fetching raw logs…\");\n        const logsRes = await APIClient.get('/logs');\n        console.log(\"raw logs:\", logsRes.data);\n\n        console.log(\"Detecting anomalies…\");\n        const detectRes = await APIClient.post('/detect-anomalies', logsRes.data);\n        console.log(\"annotated logs:\", detectRes.data);\n\n        const anomalies = detectRes.data.filter(l => l.anomaly === -1);\n        console.log(\"filtered anomalies:\", anomalies);\n        setLogs(anomalies);\n      } catch (err) {\n        console.error(\"Error loading logs:\", err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  if (loading) return <p>Loading logs…</p>;\n\n  return (\n    <div>\n      <h2>Anomalous Logs</h2>\n      {logs.length === 0 ? (\n        <p>No anomalies found.</p>\n      ) : (\n        <table className=\"logs-table\">\n          <thead>\n            <tr>\n              {Object.keys(logs[0]).map((key) => (\n                <th key={key}>{key}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {logs.map((log) => (\n              <tr key={log.id || log.timestamp} className=\"anomaly-row\">\n                {Object.values(log).map((val, i) => (\n                  <td key={i}>{val}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}